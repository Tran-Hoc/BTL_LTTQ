<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="txtSearchsp.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQwAAAAqCAYAAABGDmUMAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAPnSURBVHhe7d2/TxNhHMfxjo6OjI6Mjo7+BYbFxNGRODk4
        ODg4mrg5OLiZuJm4mTgBd9fr8TOEEH6EHyUELrWWBmutFRtyfj/1648WEFBRad+v5BmAo9fl+dzzfJ97
        7nIA8NeMjo5esjZs7X4cxyPWZqMoqoyNjWU0Gu3fNPVB9UVrifqmtbvWBr3b/l124kthGD60L5XaF6ov
        Ly83NjY2skqlku3u7mbNZjMD8O+oD6ovVqvVTH1zfX29VSgUagqSfD7/1PrwFe/OZ8dOMmAB8Uwhsbm5
        mTUaDf96AM4DBUmaptnk5OSu9eMRXfy9e/9ZlkwPLJlq29vbn/zcAM4xzQh08bf2xILjgnf132MfdNGG
        MoENaZr7+/t+KgC9wmYLmq7Mawbh3f7XaLiSJMlSuVxmVAH0sFqtlllf37Q+f9m7/+koLCx1SvV63T8S
        QC9TfWNqaqp06tCwf9A0pEhRE+gve3t7GmmkGjB4HBwvjuOJnZ2dPf8MAH1EswrLgBULjeMLoXbgo2Kx
        yI0UQB8rlUqfbJbxymPhcJYoA1o6ZTUEwPj4+Nuf1jNsdPEiTVNWRAC07xS1TJj1eOikJFGi+LEAkM3N
        zWmUMeQx8V0URY+3trb8MADI2ntRbJSReEx8p00pbBoD8CPVM8MwbHasmNgPg4VCoebHAMA38/PzNcuI
        Gx4X7cC4vbq6+tH/DgDflEqlLJ/PP/e4yOW0P15bXgGg24HVEhU1VNwAgG6qbarG6XHRLni+YZMZgMOo
        8BkEQcvjIpezHz6w0QzAUfScUI+L9pRkVvMUAOh2YEqiCqgqoQDQTQ/XsYxY8rhoL6ve15OFAaDbgbs9
        LTCuTk9PMycBcIBeI2IZMexx0Q6MC2EYvmu1Wn4IAHxho4u6ZUTnE7jsly/L5bIfAgCH1C++sgQZ0lZW
        Pw4AspWVlfdBENzxmOhkSVLkBi4AogcCR1FUVcnCI6KT/eGKXqHmxwPoY0c+POdHcRyP6BVqAPqXZhqa
        cXgsHM0S5aKFxjYP0wH6k1ZLkyR5Y1lwsneT2IGDExMTr1lmBfqLNprNzMxULAOuehycjA1HrukfCQ2g
        PygsFhYWqjbDuOUxcDpRFF3XuxaZngC9TQMDDRB+OSy+sqHJZdU02M0K9CYVOL1mcbppyFHsg1QIndUy
        C8/NAHqD7rNYXFysazXE+vjJX758UvahQzZNSXUSbvACzidd9NfW1pp+U9ZN795nRydRKtkJG9rJpu2v
        uuccwP9HF3eVFPRmAL1ORBf9IAjuWT8+/u3sf5KdcMDasE1XEguQJT3Gi0aj/V9NF3eVFKyv3rY26N0X
        AM5SLvcZi5a2OdHWINIAAAAASUVORK5CYII=
</value>
  </data>
</root>